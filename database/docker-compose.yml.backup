version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: aigov_postgres
    environment:
      POSTGRES_DB: aigov_admin
      POSTGRES_USER: aigov_user
      POSTGRES_PASSWORD: aigov_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init_data.sql:/docker-entrypoint-initdb.d/02-init-data.sql
    networks:
      - aigov-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aigov_user -d aigov_admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: aigov_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aigov-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Qdrant 벡터 데이터베이스
  qdrant:
    image: qdrant/qdrant:latest
    container_name: aigov_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - aigov-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Elasticsearch (로그 저장)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: aigov_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - aigov-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Kibana (로그 시각화)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: aigov_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - aigov-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  aigov-network:
    driver: bridge

