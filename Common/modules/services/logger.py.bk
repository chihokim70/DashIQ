from loguru import logger
import sys
import os

from elasticsearch import Elasticsearch
from app.config import get_settings

settings = get_settings()

# es = Elasticsearch(
#    settings.elasticsearch_url,
#    http_auth=(settings.elasticsearch_user, settings.elasticsearch_password),
#    verify_certs=bool(settings.elastic_ca_cert_path),
#    ca_certs=settings.elastic_ca_cert_path if settings.elastic_ca_cert_path else None
# )

# 기본 콘솔 로그 설정
logger.remove()
logger.add(sys.stdout, level="INFO", format="<green>{time:YYYY-MM-DD HH:mm:ss}</green> | <level>{level}</level> | <cyan>{message}</cyan>")

# Elasticsearch 로그 전송 여부 (환경변수로 제어)
# ENABLE_ES_LOGGING = os.getenv("ENABLE_ES_LOGGING", "false").lower() == "true"
#
# if ENABLE_ES_LOGGING:
#    from elasticsearch import Elasticsearch
#
#    ES_URL = os.getenv("ELASTICSEARCH_URL", "http://localhost:9200")
#    es_client = Elasticsearch(ES_URL)
#
#    def log_to_elasticsearch(index: str, document: dict):
#        try:
#            es_client.index(index=index, document=document)
#        except Exception as e:
#            logger.error(f"[Elasticsearch] 로그 실패: {str(e)}")
# else:
#    def log_to_elasticsearch(index: str, document: dict):
#        pass  # 비활성화 시 아무 작업 안 함
#

# ES 클라이언트 초기화
if settings.enable_es_logging:
    es = Elasticsearch(
        settings.elasticsearch_url,
        http_auth=(settings.elasticsearch_user, settings.elasticsearch_password),
        verify_certs=bool(settings.elastic_ca_cert_path),
        ca_certs=settings.elastic_ca_cert_path if settings.elastic_ca_cert_path else None
    )

    def log_to_elasticsearch(index: str, document: dict):
        try:
            es.index(index=index, document=document)
        except Exception as e:
            logger.error(f"[ES Logging Failed] {str(e)}")
else:
    def log_to_elasticsearch(index: str, document: dict):
        pass  # 로깅 비활성화
